upstream jupyterhub_service {
    server 127.0.0.1:8000;
}

server {
    listen 80;
    listen [::]:80;
    server_name sistemi.me;
location / {
        return 301 https://$host$request_uri;
    }
location ~ /.well-known/acme-challenge {
        allow all;
        root /tmp/acme_challenge;
    }
}
server {


    listen 443 ssl;
  listen [::]:443 ssl http2;
    server_name sistemi.me;
ssl_certificate /etc/letsencrypt/live/sistemi.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sistemi.me/privkey.pem;

     ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDH>
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;
    location / {
        proxy_pass http://jupyterhub_service;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # websocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Scheme $scheme;

        proxy_buffering off;
    }
}
